version: '3.8'

services:
  web-server-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web-server-app
    depends_on:
      - web-server-db
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "3000:3000"
    volumes:
      - app-data:/var/app/logs
    restart: unless-stopped
    networks:
      - log-monitor-network

  web-server-db:
    image: postgres:17
    container_name: web-server-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/migrations:/migrations
      - ./run-migrations.sh:/docker-entrypoint-initdb.d/01_run_migrations.sh
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - log-monitor-network

  fluentbit:
    image: fluent/fluent-bit:2.1
    container_name: fluentbit
    ports:
      - "2020:2020" 
      - "2021:2021"
    volumes:
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - app-data:/var/app/logs:ro
    environment:
      - KAFKA_BROKERS=kafka-server:9092
      - KAFKA_TOPIC=web-server-logs
    depends_on:
      - web-server-app
    networks:
      - log-monitor-network

volumes:
  app-data: {}
  pgdata:

networks:
  log-monitor-network:
    name: log-monitor-network
    driver: bridge
